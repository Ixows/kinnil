<!DOCTYPE html>

<html lang="en">
<head>
   <%include ../partials/head %>
   <title>OEE</title>
</head>

<body>
   <div id="wrapper">
      <!-- Sidebar -->

      <div id="sidebar-wrapper">
         <%include ../partials/sidebar-wrapper %>
      </div>

      <!-- Page Content -->
      <div id="page-content-wrapper">
         <%include ../partials/navbar %>


        <div class="row">
        <div class="col-lg-12 col-sm-12">
            <h2>Disponibilidad</h2> <!-- TODO: Hay que cambiar este titulo a otro lado o de plano quitarlo -->
            <!-- TODO: Hay que hay que revisar si la tablet esta connectada o no para poner el status real una vez se abre la pagina -->
            <div class="widget widget-stats">
            <div class="content">
                <%include ../partials/search %>
            </div>
            </div>
        </div>
        </div>


        <div class="row" >
            <div class="col-lg-12 col-sm-12">
                <!--<div class="widget widget-stats">-->
                <div class="">
                <div class="content">
                    
                    <div id="tatm" style="width: 900px; height: 500px;"></div>
                    <!-- TODO: Hay que ver la manera de mandarlos a imprimir, o imprimir algo de la pantalla -->
                </div>
                </div>
            </div>
            <div class="col-lg-12 col-sm-12">
                <!--<div class="widget widget-stats">-->
                <div class="">
                <div class="content2">
                    
                    <div id="desglose" style="width: 900px; height: 500px;"></div>
                </div>
                </div>
            </div>
            <div class="col-lg-12 col-sm-12">
                <!--<div class="widget widget-stats">-->
                <div class="">
                <div id = "contenedor-tabla">

                </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-3">
                <!--<div class="widget widget-stats">-->
                <div class="">
                <div class="content2">
                    
                    <div id="disponibilidad" style="width: 250px; height: 250px;"></div>
                </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-3">
                <!--<div class="widget widget-stats">-->
                <div class="">
                <div class="content2">
                    
                    <div id="rendimiento" style="width: 250px; height: 250px;"></div>
                </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-3">
                <!--<div class="widget widget-stats">-->
                <div class="">
                <div class="content2">
                    
                    <div id="calidad" style="width: 250px; height: 250px;"></div>
                </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-3">
                <!--<div class="widget widget-stats">-->
                <div class="">
                <div class="content2">
                    
                    <div id="oee" style="width: 250px; height: 250px;"></div>
                </div>
                </div>
            </div>
            
        </div>
        

      </div>
      <!-- /#page-content-wrapper -->
   </div>
   <!-- /#wrapper -->
   <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script> <!-- Se carga el chart.js -->
   <!-- <script src="path/to/chartjs/dist/Chart.js"></script> --> <!-- A lo mejor es bueno cargar desde una direccion fija TODO: revisar -->
   <script src="/socket.io/socket.io.js"></script> 
   <%include ../partials/js %>
   <script>
      
            var fechaInicio; 
            var fechaFin;
            var tipo = "turno"; // Por default es por turno para que aparesca algo aunque el usuario no seleccione una opcion.
            
            document.getElementById('ifTurno').style.display = 'block'; // Hace que se despliegue las opciones de los turnos

            function byTurno() {
                document.getElementById('ifTurno').style.display = 'block';
                document.getElementById('ifProducto').style.display = 'none';
                document.getElementById('ifHora').style.display = 'none';
                tipo = "turno";
            }
            function byProducto() {
                document.getElementById('ifTurno').style.display = 'none';
                document.getElementById('ifProducto').style.display = 'block';
                document.getElementById('ifHora').style.display = 'none';
                tipo = "producto";
            }
            function byHora() {
                document.getElementById('ifTurno').style.display = 'none';
                document.getElementById('ifProducto').style.display = 'none';
                document.getElementById('ifHora').style.display = 'block';
                tipo = "hora";
            }
            
            $(document).ready(function() { // El selector de fechas se despliega hasta que toda la pagina cargo

            $(function() {
            
                $('#reportrange i').click(function() {
                    $(this).parent().find('input').click();
                });
    
                var start = moment().subtract(29, 'days');
                var end = moment();
    
                function cb(start, end) {
                    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                    fechaInicio = start;
                    fechaFin = end;
                }
    
                $('#reportrange').daterangepicker({
                    startDate: start,
                    endDate: end,
                    ranges: {
                    'Hoy': [moment(), moment()],
                    'Ayer': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Ultimos 7 Dias': [moment().subtract(6, 'days'), moment()],
                    'Ultimos 30 Dias': [moment().subtract(29, 'days'), moment()],
                    'Este mes': [moment().startOf('month'), moment().endOf('month')]
                    /*'Anterior mes': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]*/
                    },
                    locale: {
                        "direction": "ltr",
                        "format": "DD/MM/YYYY HH:mm",
                        "separator": " - ",
                        "applyLabel": "Apicar",
                        "cancelLabel": "Cancelar",
                        "fromLabel": "Desde",
                        "toLabel": "Hasta",
                        "customRangeLabel": "Custom",
                        "daysOfWeek": [
                            "Dom",
                            "Lun",
                            "Mar",
                            "Mie",
                            "jue",
                            "Vie",
                            "Sa"
                        ],
                        "monthNames": [
                            "Enero",
                            "Febrero",
                            "Marzo",
                            "Abril",
                            "Mayo",
                            "Junio",
                            "Julio",
                            "Agosto",
                            "Septiembre",
                            "Octubre",
                            "Noviembre",
                            "Diciembre"
                        ],
                        "firstDay": 1
                    }
    
                }, cb);
                
                cb(start, end);
            });
        });
    
            // Se hace la consulta segun los campos seleccionados
            // TODO: tomar en cuenta las reglas del negocio a programar
            // una planta o todas, una area a todas, un producto o varios mas 
            // TODO: ya no encontre las demas hojas, hay que retomar con ricardo y ver si va a haber casos especificos donde se seleccione por maquina
            //
            // TODO: Refactorizar este codigo.
            // TODO: Tomar en cuenta que va a aparecer otro cliente conectado a los socket con esto.
            var socket = io.connect('http://ec2-18-221-199-24.us-east-2.compute.amazonaws.com:3000');
            //var socket = io.connect('http://localhost:3000'); // Se entabla la conexion con el servidor

            function consultar() {

                console.log("se hizo una consulta");
                var json = {}

                json.planta = $("#plantas-choice").val();
                json.area = $("#areas-choice").val();
                json.turno = $("#turno").val();
                json.producto = $("#producto").val();
                json.inicio = fechaInicio.format('YYYY-MM-DD'); // TODO: hay que ver si esta fecha siempre va a ser igual o si falla como en C#
                json.fin = fechaFin.format('YYYY-MM-DD');
                json.horaInicio = $('#horaInicio').val();
                json.horaFin = $('#horaFin').val();
                json.tipo = tipo;
                // TODO: Agregar las validaciones
                // TODO: Agregar un titulo y todo a la grafica del reporte.
                // TODO: Agregar una tabla con el resultado del desglose
                // TODO: desplegar un mensage de que no se puede graficar si es que el reporte no regreso datos
                // TODO: Pensar en desplegar el reporte en un modal (would be nice)

                // Previene que ocurra el evento POST y se refresque la pagina asi como asi
                event.preventDefault();

                // No hace POST si no hay productos o turnos seleccionados
                if (tipo == 'turno' && json.turno == 'noturnos'){
                    alert("No se puede obtener el reporte por turnos, No hay turnos"); 
                    return;
                }
                if (tipo == 'producto' && json.producto == 'noproductos'){
                    alert("No se puede obtener el reporte por productos, No hay productos");
                    return;
                }
                socket.emit('reporte-oee', json);
            }

            socket.on('reporte-oee', function(message) {
                // TODO: hacer algo para cuando los valores sean NULOS

                //$('#reporte-modal').modal('show');

                console.log("se recibio un evento de reporte-oee")
                var ta = message.disponibilidad[0].ta/60/60;
                var tm = message.disponibilidad[0].tm/60/60;

                // TODO: Acomodar mejor todo este codigo.... refactorizarlo!
                // Load Charts and the corechart package.
                google.charts.load('current', {'packages':['corechart']});
                google.charts.load('current', {'packages':['gauge']});
                // Draw the pie chart for TaTm's when Charts is loaded.
                google.charts.setOnLoadCallback(drawTaTmChart);
                // Draw the pie chart for Desglose's when Charts is loaded.
                google.charts.setOnLoadCallback(drawDesgloseChart);
                // Draw the pie chart for Disponibilidad's when Charts is loaded.
                google.charts.setOnLoadCallback(drawDisponibilidadChart);
                // Draw the pie chart for Rendimiento's when Charts is loaded.
                google.charts.setOnLoadCallback(drawRendimientoChart);
                // Draw the pie chart for Calidad's when Charts is loaded.
                google.charts.setOnLoadCallback(drawCalidadChart);
                // Draw the pie chart for OEE's when Charts is loaded.
                google.charts.setOnLoadCallback(drawOEEChart);
                
            
                function drawTaTmChart() {
            
                    var data = google.visualization.arrayToDataTable([
                    ['Evento', 'Horas'],
                    ['Tiempo activo',     ta],
                    ['Tiempo muerto',     tm]
                    ]);
            
                    var options = {
                    title: 'Disponibilidad',
                    is3D: true,
                    };
            
                    var chart = new google.visualization.PieChart(document.getElementById('tatm'));
            
                    chart.draw(data, options);
                }

                var labels = [];
                var valores = [];

                for (var i = 0, l  = message.desglose.length ; i < l; i += 1) {
                    labels.push(message.desglose[i].nombre);
                    valores.push(message.desglose[i].tm/60/60)
                }

                console.log("labels y valores");
                console.log(labels);
                console.log(valores);


                console.log("message.desglose");
                console.log(message.desglose);

                function drawDesgloseChart() {

                    var datosParaLaGrafica=[];
                    var Header= ['Razon', 'Tiempo'];
                    datosParaLaGrafica.push(Header);

                    for (var i = 0; i < message.desglose.length; i++) {
                        var temp=[];
                        temp.push(message.desglose[i].nombre);
                        temp.push(message.desglose[i].tm/60/60);

                        datosParaLaGrafica.push(temp);
                    }

                    console.log("datos para la grafica");
                    console.log(datosParaLaGrafica);

                    var chartdata = new google.visualization.arrayToDataTable(datosParaLaGrafica);

                    var chart = new google.visualization.PieChart(document.getElementById('desglose'));
            
                    var options = {
                    title: 'Desglose',
                    is3D: true,
                    };
            
                    chart.draw(chartdata, options);
                }

                $("#contenedor-tabla").html("");

                // Se crea la tabla con sus atributos
                var table = document.createElement('table');
                table.className = "table table-bordered";
                table.border = '1';

                // Necesitamos que la tabla tenga thead y body para poder utilizar bootgrid
                var thead = document.createElement('thead');
                var tbody = document.createElement('tbody');

                table.appendChild(thead);
                table.appendChild(tbody);

                // Primera rutina para las columnas de la tabla
                var tr = document.createElement('tr');
                thead.appendChild(tr);

                var th = document.createElement('th')
                th.appendChild(document.createTextNode("Razon de paro"));
                tr.appendChild(th);

                var th2 = document.createElement('th')
                th2.appendChild(document.createTextNode("Tiempo"));
                tr.appendChild(th2);

                console.log(message.desglose);
                console.log(message.desglose[0].nombre);
                console.log(message.desglose[0].tm);

                // Segunda rutina que se encarga de las filas de la tabla
                for (i = 0; i < message.desglose.length; i++) {
                    var tr = document.createElement('tr');
                    // Este for se encarga de extraer cada valor de message.desglose para cada celda
                        var cell = document.createElement('td');
                        var cellText = document.createTextNode(message.desglose[i].nombre);
                        cell.appendChild(cellText);
                        tr.appendChild(cell);

                        var cell2 = document.createElement('td');
                        var cellText2 = document.createTextNode(message.desglose[i].tm/60/60 + " hrs");
                        cell2.appendChild(cellText2);
                        tr.appendChild(cell2);

                        tbody.appendChild(tr);
                }

                // Le agrega la tabla al Widget previamente creado antes de mandar el query a ejecutarse
                document.getElementById("contenedor-tabla").appendChild(table);


                // Dibuja el disponibilidad (gauge)
                function drawDisponibilidadChart () {
                    var data = google.visualization.arrayToDataTable([
                    ['Label', 'Value'],
                    ['Disponibilidad', message.disponibilidad[0].disponibilidad]
                    ]);

                    var formatter = new google.visualization.NumberFormat(
                        {suffix: '%',pattern:'#'}
                    );
                        formatter.format(data,1);

                    var options = {
                    width: 400, height: 120,
                    redFrom: 1, redTo: 20,
                    yellowFrom:20, yellowTo: 40,
                    greenFrom: 80, greenTo: 100,
                    height: 250,
                    minorTicks: 5
                    };

                    var chart = new google.visualization.Gauge(document.getElementById('disponibilidad'));
                    chart.draw(data, options);
                }

                // Dibuja el rendimiento (gauge)
                function drawRendimientoChart () {
                    var data = google.visualization.arrayToDataTable([
                    ['Label', 'Value'],
                    ['Rendimiento', message.rendimiento[0].rendimiento]
                    ]);

                    var formatter = new google.visualization.NumberFormat(
                        {suffix: '%',pattern:'#'}
                    );
                        formatter.format(data,1);

                    var options = {
                    width: 400, height: 120,
                    redFrom: 1, redTo: 20,
                    yellowFrom:20, yellowTo: 40,
                    greenFrom: 80, greenTo: 100,
                    height: 250,
                    minorTicks: 5
                    };

                    var chart = new google.visualization.Gauge(document.getElementById('rendimiento'));
                    chart.draw(data, options);
                }

                // Dibuja el Calidad (gauge)
                function drawCalidadChart () {
                    var data = google.visualization.arrayToDataTable([
                    ['Label', 'Value'],
                    ['Calidad', message.calidad[0].calidad]
                    ]);

                    var formatter = new google.visualization.NumberFormat(
                        {suffix: '%',pattern:'#'}
                    );
                        formatter.format(data,1);

                    var options = {
                    width: 400, height: 120,
                    redFrom: 1, redTo: 20,
                    yellowFrom:20, yellowTo: 40,
                    greenFrom: 80, greenTo: 100,
                    height: 250,
                    minorTicks: 5
                    };

                    var chart = new google.visualization.Gauge(document.getElementById('calidad'));
                    chart.draw(data, options);
                }

                function drawOEEChart() {
                    var data = google.visualization.arrayToDataTable([
                    ['Label', 'Value'],
                    ['OEE', (message.disponibilidad[0].disponibilidad + message.rendimiento[0].rendimiento + message.calidad[0].calidad) / 3]
                    ]);

                    var formatter = new google.visualization.NumberFormat(
                        {suffix: '%',pattern:'#'}
                    );
                        formatter.format(data,1);

                    var options = {
                    width: 400, height: 120,
                    redFrom: 1, redTo: 20,
                    yellowFrom:20, yellowTo: 40,
                    greenFrom: 80, greenTo: 100,
                    height: 250,
                    minorTicks: 5
                    };

                    var chart = new google.visualization.Gauge(document.getElementById('oee'));
                    chart.draw(data, options);
                }

            });

            /*$(window).resize(function(){
                drawTaTmChart();
                drawDesgloseChart();
                drawDisponibilidadChart();
                drawRendimientoChart();
                drawCalidadChart();
                drawDesgloseChart();
            });*/

            /*
            * Se ejecuta cuando se cambia de planta 
            */
            $("#plantas-choice").change(function() { // Cada vez que se cambie de plantas

                console.log("se cambio la planta");
                // Se obtiene el ID de la planta seleccionada
                var $dropdown = $(this);
                var id = $dropdown.val(); 

                // Se hace una limpieza por si el formario no estaba como valido
                document.getElementById("areas-choice-div").classList.remove('has-error');
                $("#btnConsultar").removeAttr('disabled','disabled');
                $("#btnConsultar").attr('enabled','enabled');

                if (id == "all"){ 
                    location.reload(); // Si todas las plantas estan seleccionadas se refresca la pagina para obtener los campos como al principio
                } else {
                    socket.emit('cambio-planta', id); // Si se selecciona cualquier otra se manada el ID por un socket
                }

            });

            /*
            * Se ejecuta cuando se recibe la respuesta del socket de cuando se cambia una planta
            */ 
            socket.on('cambio-planta', function(returnData) {

                console.log("se recibio un evento de cambio planta");
                // se vacian estos select inputs para agregar nuevos datos.
                var $areasChoice = $("#areas-choice");
                $areasChoice.empty();

                var $turnosChoice = $("#turno");
                $turnosChoice.empty();

                var $productosChoice = $("#producto");
                $productosChoice.empty();

                // AREAS
                if (returnData.areas == ""){ // Si no hay areas!
                    
                    // Se marca un error y se deshabhilita el boton de sumbit
                    $areasChoice.append("<option value='noareas'> Planta sin areas, por favor seleccione otra planta </option>");
                    document.getElementById("areas-choice-div").classList.add('has-error');
                    $("#btnConsultar").removeAttr('enabled','enabled');
                    $("#btnConsultar").attr('disabled','disabled');

                } else {

                    // Se llena el input select con todas las areas
                    $areasChoice.append("<option value='all-areas' > Todas las areas </option>")  
                    for (var i = 0, l = returnData.areas.length; i < l; i += 1) { // TODO: medir si este loop es mas rapido que el normalito
                        $areasChoice.append("<option value="+ returnData.areas[i].id +" >" + returnData.areas[i].nombre + "</option>")  
                        $("#btnConsultar").removeAttr('disabled','disabled');
                        $("#btnConsultar").attr('enabled','enabled'); // Habilita el boton por que cambiaron a una planta que si tiene areas
                    }
                }

                // TURNOS
                if (returnData.turnos == ""){ // Si no hay turnos!

                    $turnosChoice.append("<option value='noturnos'> No hay turnos en esta planta, seleccione otra opcion </option>");
                    
                } else {

                    // Se llena el input select con los turnos
                    for (var i = 0, l = returnData.turnos.length; i < l; i += 1) { // TODO: medir si este loop es mas rapido que el normalito
                        $turnosChoice.append("<option value="+ returnData.turnos[i].id +" >" + returnData.turnos[i].nombre + "</option>")  
                    }
                }

                // PRODUCTOS 
                if (returnData.productos == ""){ // Si no hay productos

                    $productosChoice.append("<option value='noproductos'> No hay productos en esta planta, seleccione otra opcion </option>");

                } else {

                    // Se llena el input select con los productos
                    for (var i = 0, l = returnData.productos.length; i < l; i += 1) { 
                        $productosChoice.append("<option value="+ returnData.productos[i].id +" >" + returnData.productos[i].nombre + "</option>")  
                    }
                }
            })


        </script>
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
        $(function() {
            
        });
        </script>
</body>
</html>