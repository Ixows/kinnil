<!DOCTYPE html>

<html lang="en">
<head>
   <%include ../partials/head %>

   <title>
   </title>
</head>

<body>
   <div id="wrapper">
      <!-- Sidebar -->


      <div id="sidebar-wrapper">
         <%include ../partials/sidebar-wrapper %>
      </div>
      <!-- Page Content -->


      <div id="page-content-wrapper">
         <%include ../partials/navbar %>

         <div class="container-fluid" id="contenedor-maestro">
            <h1>Disponibilidad</h1>
            <%include ../partials/search %>

            <hr/>
            Reporte
            <div id ="reporte1"></div>
            <div id ="reporte2"></div>

            <div class="grid-stack" id="custom-stack-items">
            </div>
         </div>
      </div>
      <!-- /#page-content-wrapper -->
   </div>
   <!-- /#wrapper -->
   <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script> <!-- Se carga el chart.js -->
   <!-- <script src="path/to/chartjs/dist/Chart.js"></script> --> <!-- A lo mejor es bueno cargar desde una direccion fija TODO: revisar -->
   <script src="/socket.io/socket.io.js"></script> 
   <%include ../partials/js %>
   <script>
       
    
            var fechaInicio; 
            var fechaFin;
            var tipo = "turno"; // Por default es por turno para que aparesca algo aunque el usuario no seleccione una opcion.
            
            document.getElementById('ifTurno').style.display = 'block'; // Hace que se despliegue las opciones de los turnos

            function byTurno() {
                document.getElementById('ifTurno').style.display = 'block';
                document.getElementById('ifProducto').style.display = 'none';
                document.getElementById('ifHora').style.display = 'none';
                tipo = "turno";
            }
            function byProducto() {
                document.getElementById('ifTurno').style.display = 'none';
                document.getElementById('ifProducto').style.display = 'block';
                document.getElementById('ifHora').style.display = 'none';
                tipo = "producto";
            }
            function byHora() {
                document.getElementById('ifTurno').style.display = 'none';
                document.getElementById('ifProducto').style.display = 'none';
                document.getElementById('ifHora').style.display = 'block';
                tipo = "hora";
            }
            
            
    
            $(document).ready(function() { // El selector de fechas se despliega hasta que toda la pagina cargo
    
            $(function() {
            
                $('#reportrange i').click(function() {
                    $(this).parent().find('input').click();
                });
    
                var start = moment().subtract(29, 'days');
                var end = moment();
    
                function cb(start, end) {
                    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
                    fechaInicio = start;
                    fechaFin = end;
                }
    
                $('#reportrange').daterangepicker({
                    startDate: start,
                    endDate: end,
                    ranges: {
                    'Hoy': [moment(), moment()],
                    'Ayer': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Ultimos 7 Dias': [moment().subtract(6, 'days'), moment()],
                    'Ultimos 30 Dias': [moment().subtract(29, 'days'), moment()],
                    'Este mes': [moment().startOf('month'), moment().endOf('month')]
                    /*'Anterior mes': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]*/
                    },
                    locale: {
                        "direction": "ltr",
                        "format": "DD/MM/YYYY HH:mm",
                        "separator": " - ",
                        "applyLabel": "Apicar",
                        "cancelLabel": "Cancelar",
                        "fromLabel": "Desde",
                        "toLabel": "Hasta",
                        "customRangeLabel": "Custom",
                        "daysOfWeek": [
                            "Dom",
                            "Lun",
                            "Mar",
                            "Mie",
                            "jue",
                            "Vie",
                            "Sa"
                        ],
                        "monthNames": [
                            "Enero",
                            "Febrero",
                            "Marzo",
                            "Abril",
                            "Mayo",
                            "Junio",
                            "Julio",
                            "Agosto",
                            "Septiembre",
                            "Octubre",
                            "Noviembre",
                            "Diciembre"
                        ],
                        "firstDay": 1
                    }
    
                }, cb);
                
                cb(start, end);
            });
        });
    
            // Se hace la consulta segun los campos seleccionados
            // TODO: tomar en cuenta las reglas del negocio a programar
            // una planta o todas, una area a todas, un producto o varios mas 
            // TODO: ya no encontre las demas hojas, hay que retomar con ricardo y ver si va a haber casos especificos donde se seleccione por maquina
            //
            /*
            function consultar() {

                var planta = $("#plantas-choice").val();
                var area = $("#areas-choice").val(); 
                var turno = $("#turno").val();
                var producto = $("#producto").val();
                var inicio = fechaInicio.format('YYYY-DD-MM');
                var fin = fechaFin.format('YYYY-DD-MM');
                var horarInicio = $('#horaInicio').val();
                var horarFin = $('#horaFin').val();

                // Previene que ocurra el evento POST y se refresque la pagina asi como asi
                event.preventDefault();

                // No hace POST si no hay productos o turnos seleccionados
                if (tipo == 'turno' && turno == 'noturnos'){
                    alert("No se puede obtener el reporte por turnos, No hay turnos"); 
                    return;
                }
                if (tipo == 'producto' && producto == 'noproductos'){
                    alert("No se puede obtener el reporte por productos, No hay productos");
                    return;
                }
    
                $.ajax({
                    type: 'POST',
                    url: '/disponibilidad',
                    data: "&planta=" + planta + "&area=" + area +"&turno=" + turno + "&producto=" + producto + "&inicio=" + inicio + "&fin=" + fin + "&horaInicio=" + horarInicio + "&horaFin=" + horarFin + "&tipo=" + tipo,
                    dataType: 'text',
                    success: function(data, textStatus, jQxhr) {
                        //$('#response pre').html(data);
                    },
                    error: function(jqXhr, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }
                });
            }
            */
            // TODO: Refactorizar este codigo.
            // TODO: Tomar en cuenta que va a aparecer otro cliente conectado a los socket con esto.
            var socket = io.connect('http://localhost:3000'); // Se entabla la conexion con el servidor

            function consultar() {

                var json = {}

                json.planta = $("#plantas-choice").val();
                json.area = $("#areas-choice").val(); 
                json.turno = $("#turno").val();
                json.producto = $("#producto").val();
                json.inicio = fechaInicio.format('YYYY-MM-DD'); // TODO: hay que ver si esta fecha siempre va a ser igual o si falla como en C#
                json.fin = fechaFin.format('YYYY-DD-MM');
                json.horarInicio = $('#horaInicio').val();
                json.horarFin = $('#horaFin').val();
                json.tipo = tipo;

                // Previene que ocurra el evento POST y se refresque la pagina asi como asi
                event.preventDefault();

                // No hace POST si no hay productos o turnos seleccionados
                if (tipo == 'turno' && json.turno == 'noturnos'){
                    alert("No se puede obtener el reporte por turnos, No hay turnos"); 
                    return;
                }
                if (tipo == 'producto' && json.producto == 'noproductos'){
                    alert("No se puede obtener el reporte por productos, No hay productos");
                    return;
                }
                socket.emit('reporte-disponibilidad', json);
            }

            socket.on('reporte-disponibilidad', function(data) {
                // TODO: hacer algo para cuando los valores sean NULOS

                console.log(data)
                
                $('#reporte1').html("<canvas id='tatm'></canvas>");
                $('#reporte2').html("<canvas id='desglose'></canvas>");

                var ta = 0;
                var tm = 0;

                ta = data.ta[0].ta/60/60;
                tm = data.tm[0].tm/60/60;

                // TODO: Mejorar estas graficas
                var ctx = document.getElementById('tatm').getContext('2d');
                var chart = new Chart(ctx, {
                    // The type of chart we want to create
                    type: 'pie',

                    // The data for our dataset
                    data: {
                        labels: ["Tiempo activo (hrs)", "Tiempo Muerto (hrs)"],
                        datasets: [{
                            label: "Disponibilidad",
                            backgroundColor: ['rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)'],
                            borderColor: ['rgba(255,99,132,1)',
                                        'rgba(54, 162, 235, 1)'],
                            data: [ta, tm],
                        }]
                    },
                    // Configuration options go here
                    options: {
                        legend: {
                            display: true,
                            fontColor: "#000000"
                        }
                    }
                });

                var labels = [];
                var valores = [];

                console.log(data.desglose[0].nombre);

                for (var i = 0, l  = data.desglose.length ; i < l; i += 1) {
                    labels.push(data.desglose[i].nombre);
                    valores.push(data.desglose[i].tm)
                }

                /*for (var i = 0, l = returnData.areas.length; i < l; i += 1) { // TODO: medir si este loop es mas rapido que el normalito
                        $areasChoice.append("<option value="+ returnData.areas[i].id +" >" + returnData.areas[i].nombre + "</option>")  
                        $("#btnConsultar").removeAttr('disabled','disabled');
                        $("#btnConsultar").attr('enabled','enabled'); // Habilita el boton por que cambiaron a una planta que si tiene areas
                    }*/

                var ctx2 = document.getElementById('desglose').getContext('2d');
                var chart = new Chart(ctx2, {
                    // The type of chart we want to create
                    type: 'pie',

                    // The data for our dataset
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "Disponibilidad",
                            backgroundColor: ['rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'],
                            borderColor: ['rgba(255,99,132,1)',
                                        'rgba(54, 162, 235, 1)',
                                        'rgba(255, 206, 86, 1)',
                                        'rgba(75, 192, 192, 1)',
                                        'rgba(153, 102, 255, 1)',
                                        'rgba(255, 159, 64, 1)'],
                            data: valores,
                        }]
                    },
                    // Configuration options go here
                    options: {}
                });


            });

            

            /*
            * Se ejecuta cuando se cambia de planta 
            */
            $("#plantas-choice").change(function() { // Cada vez que se cambie de plantas

                // Se obtiene el ID de la planta seleccionada
                var $dropdown = $(this);
                var id = $dropdown.val(); 

                // Se hace una limpieza por si el formario no estaba como valido
                document.getElementById("areas-choice-div").classList.remove('has-error');
                $("#btnConsultar").removeAttr('disabled','disabled');
                $("#btnConsultar").attr('enabled','enabled');

                if (id == "all"){ 
                    location.reload(); // Si todas las plantas estan seleccionadas se refresca la pagina para obtener los campos como al principio
                } else {
                    socket.emit('cambio-planta', id); // Si se selecciona cualquier otra se manada el ID por un socket
                }

            });

            /*
            * Se ejecuta cuando se recibe la respuesta del socket de cuando se cambia una planta
            */ 
            socket.on('cambio-planta', function(returnData) {
                // se vacian estos select inputs para agregar nuevos datos.
                var $areasChoice = $("#areas-choice");
                $areasChoice.empty();

                var $turnosChoice = $("#turno");
                $turnosChoice.empty();

                var $productosChoice = $("#producto");
                $productosChoice.empty();

                // AREAS
                if (returnData.areas == ""){ // Si no hay areas!
                    
                    // Se marca un error y se deshabhilita el boton de sumbit
                    $areasChoice.append("<option value='noareas'> Planta sin areas, por favor seleccione otra planta </option>");
                    document.getElementById("areas-choice-div").classList.add('has-error');
                    $("#btnConsultar").removeAttr('enabled','enabled');
                    $("#btnConsultar").attr('disabled','disabled');

                } else {

                    // Se llena el input select con todas las areas
                    $areasChoice.append("<option value='all-areas' > Todas las areas </option>")  
                    for (var i = 0, l = returnData.areas.length; i < l; i += 1) { // TODO: medir si este loop es mas rapido que el normalito
                        $areasChoice.append("<option value="+ returnData.areas[i].id +" >" + returnData.areas[i].nombre + "</option>")  
                        $("#btnConsultar").removeAttr('disabled','disabled');
                        $("#btnConsultar").attr('enabled','enabled'); // Habilita el boton por que cambiaron a una planta que si tiene areas
                    }
                }

                // TURNOS
                if (returnData.turnos == ""){ // Si no hay turnos!

                    $turnosChoice.append("<option value='noturnos'> No hay turnos en esta planta, seleccione otra opcion </option>");
                    
                } else {

                    // Se llena el input select con los turnos
                    for (var i = 0, l = returnData.turnos.length; i < l; i += 1) { // TODO: medir si este loop es mas rapido que el normalito
                        $turnosChoice.append("<option value="+ returnData.turnos[i].id +" >" + returnData.turnos[i].nombre + "</option>")  
                    }
                }

                // PRODUCTOS 
                if (returnData.productos == ""){ // Si no hay productos

                    $productosChoice.append("<option value='noproductos'> No hay productos en esta planta, seleccione otra opcion </option>");

                } else {

                    // Se llena el input select con los productos
                    for (var i = 0, l = returnData.productos.length; i < l; i += 1) { 
                        $productosChoice.append("<option value="+ returnData.productos[i].id +" >" + returnData.productos[i].nombre + "</option>")  
                    }
                }
            })
        </script>
</body>
</html>